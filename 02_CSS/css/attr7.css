.img-box{
    background-color: blanchedalmond;
    width: 400px;
    height: 250px;
    position: absolute;
    top: 200px;
    left: 200px;
}

img{
    border: 1px solid gold;
    width: 100%;
    height: 100%;
    cursor: pointer;
}

img:hover{
    transition: 1s;

    /* 1. skew()
    -객체를 기울이는 속성 */
    /* transform: skewX(30deg); */
    /* transform: skewY(30deg); */
    /* transform: skew(30deg, 30deg); */

    /* 2. scale */
    /* transform: scaleX(2); */
    /* transform: scaleY(0.5); */
    /* transform: scale(2, 0.5); */
    
    /* 3. translate */
    /* transform: translateX(100px); */
    /* transform: translateY(100px); */
    /* transform: translate(-100px, 50px); */

    /* 4. rotate */
    /* transform: rotate(-45deg); */
    /* transform: perspective(500px)rotateX(180deg); */
    /* backface-visibility: hidden; */

     /* 여러개 쓸 때 순서 주의 */
    transform: translate(200px) scaleX(2) skewY(30deg);
}

.box{
    width: 100px;
    height: 100px;
    background-color: black;
    margin-bottom: 30px;
    cursor: pointer;
    transition: .4s;
    /* transition-duration: 2s;
    transition-delay: 2s;
    transition-property: width;
    transition-timing-function: ease-in-out; */
}
 /*
    단축 프로퍼티 순서 duration은 필수값!
    transition: property duration timing-function delay;
    ex >> height 1s ease 1s
        -transition-property : 변화대상 속성, 어떤 속성이 일정시간에 걸쳐 변화가 일어날지
            써주지 않으면 default값은 all, 모든 값에 대해 transition
        -transition-duratioin: (~s로 지정) 변화가 일어날 시간, 변화가 얼마동안 일어날건지
        -transition-timing-function : 변화 시간별 속도 지정
            - linear: 속도 일정
    - ease: 천천히 시작 - 빨라짐 - 느려짐
    - ease-in: 천천히 시작 - 정상 속도
    - ease-out: 마지막에 천천히 속도 줄임
    - ease-in-out: 천천히 시작 - 정상 속도 - 느려짐
  */

.box1:hover{
    background-color: pink;
    height: 120px;
    width: 120px;
}

.box2:hover{
    background-color: aqua;
    transform: translateX(200px) scale(2);
}

/* .box:hover{ */
    /* opacity: 0; => transition 먹힘 */
    /* display:none => transition 안먹힘 */
/* } */